package com.linkwechat.wecom.service.impl;import java.util.List;import java.util.stream.Collectors;import cn.hutool.core.collection.CollectionUtil;import cn.hutool.core.collection.ListUtil;import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;import com.linkwechat.common.constant.WeConstans;import com.linkwechat.common.enums.MediaType;import com.linkwechat.common.utils.StringUtils;import com.linkwechat.common.utils.img.ImageUtils;import com.linkwechat.wecom.client.WeCustomerGroupClient;import com.linkwechat.wecom.client.WeMediaClient;import com.linkwechat.wecom.domain.WeUser;import com.linkwechat.wecom.domain.dto.GroupWelcomeTplDto;import com.linkwechat.wecom.domain.dto.WeMediaDto;import com.linkwechat.wecom.domain.dto.WeResultDto;import com.linkwechat.wecom.service.IWeMaterialService;import com.linkwechat.wecom.service.IWeUserService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import com.linkwechat.wecom.mapper.WeMsgTlpMapper;import com.linkwechat.wecom.domain.WeMsgTlp;import com.linkwechat.wecom.service.IWeMsgTlpService;import org.springframework.transaction.annotation.Transactional;/** * 欢迎语模板Service业务层处理 *  * @author ruoyi * @date 2020-10-04 */@Servicepublic class WeMsgTlpServiceImpl extends ServiceImpl<WeMsgTlpMapper,WeMsgTlp> implements IWeMsgTlpService{    @Autowired    private IWeUserService iWeUserService;    @Autowired    private WeMediaClient weMediaClient;    @Autowired    private IWeMaterialService materialService;    @Autowired    private WeCustomerGroupClient weCustomerGroupClient;    /**     * 新增欢迎语模板     *      * @param weMsgTlp 欢迎语模板     * @return 结果     */    @Override    @Transactional    public void addorUpdate(WeMsgTlp weMsgTlp)    {        if(weMsgTlp.getWelcomeMsgTplType()                .equals(new Integer(2))) {            String userIds = weMsgTlp.getUserIds();            if (StringUtils.isNotEmpty(userIds)) {                List<WeUser> weUsers = iWeUserService.listByIds(                        ListUtil.toList(userIds.split(","))                );                if (CollectionUtil.isNotEmpty(weUsers)) {                    weMsgTlp.setUserNames(String.join(",",                            weUsers.stream().map(WeUser::getName).collect(Collectors.toList())));                }            }        }            if(weMsgTlp.getWelcomeMsgTplType()                    .equals(new Integer(3))){                GroupWelcomeTplDto tplDto=new GroupWelcomeTplDto();                tplDto.setText(                        GroupWelcomeTplDto.Text.builder()                                .content(weMsgTlp.getWelcomeMsg())                                .build()                );                //图片                String picUrl = weMsgTlp.getPicUrl();                if(StringUtils.isNotEmpty(picUrl)){                    ListUtil.toList(picUrl.split(",")).stream().forEach(k->{                        WeMediaDto uploadimg = weMediaClient.uploadimg(                                ImageUtils.getMultipartFile(k)                        );                        if(uploadimg.getErrcode().equals(WeConstans.WE_SUCCESS_CODE)){                            tplDto.setImage(                                    GroupWelcomeTplDto.Image.builder()                                            .pic_url(uploadimg.getUrl())                                            .build()                            );                        }                    });                }                //图文                List<WeMsgTlp.ImageText> imageText = weMsgTlp.getImageText();                if(CollectionUtil.isNotEmpty(imageText)){                    imageText.stream().forEach(k->{                        tplDto.setLink(                                GroupWelcomeTplDto.Link.builder()                                        .title(k.getImageTextTile())                                        .url(k.getImageTextUrl())                                        .build()                        );                    });                }                //小程序                List<WeMsgTlp.Applet> applet = weMsgTlp.getApplet();                if(CollectionUtil.isNotEmpty(applet)){                    applet.stream().forEach(k->{                        WeMediaDto weMediaDto = materialService.uploadTemporaryMaterial(k.getAppPic(),                                MediaType.IMAGE.getMediaType()                                , k.getAppTile());                        if(weMediaDto.getErrcode().equals(WeConstans.WE_SUCCESS_CODE)){                            tplDto.setMiniprogram(                                    GroupWelcomeTplDto.Miniprogram.builder()                                            .appid(k.getAppId())                                            .page(k.getAppPath())                                            .pic_media_id(weMediaDto.getMedia_id())                                            .title(k.getAppTile())                                            .build()                            );                        }                    });                }                WeMsgTlp oldWeMsgTlp = this.getById(weMsgTlp.getId());                if(null != oldWeMsgTlp){                    tplDto.setTemplate_id(oldWeMsgTlp.getTemplateId());                    WeResultDto weResultDto = weCustomerGroupClient.updateGroupWelcomeTpl(tplDto);                    if(weResultDto.getErrcode().equals(WeConstans.WE_SUCCESS_CODE)){                         this.updateById(weMsgTlp);                    }                }else{                    GroupWelcomeTplDto tplDto1 = weCustomerGroupClient.addGroupWelcomeTpl(tplDto);                    if(tplDto1.getErrcode().equals(WeConstans.WE_SUCCESS_CODE)){                        weMsgTlp.setTemplateId(tplDto1.getTemplate_id());                        this.save(weMsgTlp);                    }                }            }    }}